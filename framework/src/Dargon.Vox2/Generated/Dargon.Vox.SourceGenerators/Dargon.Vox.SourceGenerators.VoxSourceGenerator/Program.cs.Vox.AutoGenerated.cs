
                                                                                                                        // <auto-generated/>
                                                                                                                        using System;
                                                                                                                        using Dargon.Commons;
                                                                                                                        using Dargon.Vox2;
                                                                                                                        

                                                                                                                        namespace Dargon.Vox2 {
                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public static class SimpleTestTypeVoxConstants {
                                                                                                                              public const int TypeId = -2147483647;
                                                                                                                              public static SimpleTestTypeSerializer Serializer => SimpleTestTypeSerializer.Instance;
                                                                                                                              public static readonly byte[] TypeIdBytes = TypeId.ToVariableIntBytes();
                                                                                                                           }

                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public sealed partial class SimpleTestTypeSerializer : IVoxSerializer<SimpleTestType> {
                                                                                                                              public static readonly SimpleTestTypeSerializer Instance = new();
                                                                                                                              public bool IsUpdatable => true;

                                                                                                                              public void WriteTypeIdBytes(VoxWriter writer) => writer.WriteTypeIdBytes(SimpleTestTypeVoxConstants.TypeIdBytes);
                                                                                                                              public void AssertReadTypeId(VoxReader reader) => reader.ReadTypeId().AssertEquals(SimpleTestTypeVoxConstants.TypeId);
                                                                                                                              public void WriteFull(VoxWriter writer, ref SimpleTestType self) { SimpleTestTypeSerializer.Instance.WriteTypeIdBytes(writer); WriteRaw(writer, ref self);
 }
                                                                                                                              public void WriteRaw(VoxWriter writer, ref SimpleTestType self) { 
                                                                                                                                 writer.WriteRawInt32(self.i);
                                                                                                                                 writer.WriteRawString(self.s); }
               

                                                                                                                              public SimpleTestType ReadFull(VoxReader reader) { SimpleTestType res = new(); ReadFullIntoRef(reader, ref res); return res; }
                                                                                                                              public SimpleTestType ReadRaw(VoxReader reader) { SimpleTestType res = new(); ReadRawIntoRef(reader, ref res); return res; }
                                                                                                                              public void ReadFullIntoRef(VoxReader reader, ref SimpleTestType self) { SimpleTestTypeSerializer.Instance.AssertReadTypeId(reader); ReadRawIntoRef(reader, ref self);
 }
                                                                                                                              public void ReadRawIntoRef(VoxReader reader, ref SimpleTestType self) { if (self == null) throw new ArgumentNullException(nameof(SimpleTestType));

                                                                                                                                 self.i = reader.ReadRawInt32();
                                                                                                                                 self.s = reader.ReadRawString(); }
                  

                                                                                                                           }
               

                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public partial class SimpleTestType : IVoxCustomType<SimpleTestType> {
                                                                                                                              public int TypeId => SimpleTestTypeVoxConstants.TypeId;
                                                                                                                              public SimpleTestTypeSerializer Serializer => SimpleTestTypeSerializer.Instance;
                                                                                                                              IVoxSerializer<SimpleTestType> IVoxCustomType<SimpleTestType>.Serializer => SimpleTestTypeSerializer.Instance;

                                                                                                                              public void WriteFullInto(VoxWriter writer) { var copy = this; SimpleTestTypeSerializer.Instance.WriteFull(writer, ref copy); }
                                                                                                                              public void WriteRawInto(VoxWriter writer) { var copy = this; SimpleTestTypeSerializer.Instance.WriteRaw(writer, ref copy); }
                  

                                                                                                                              public void ReadFullFrom(VoxReader reader) { var copy = this; SimpleTestTypeSerializer.Instance.ReadFullIntoRef(reader, ref copy); }
                                                                                                                              public void ReadRawFrom(VoxReader reader) { var copy = this; SimpleTestTypeSerializer.Instance.ReadRawIntoRef(reader, ref copy); }
                     

                                                                                                                           }


                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public static class VoxGenerated_SimpleTestTypeStatics {
                                                                                                                              public static void WriteFullSimpleTestType(this VoxWriter writer, SimpleTestType value) { var copy = value; SimpleTestTypeSerializer.Instance.WriteFull(writer, ref value); }
                                                                                                                              public static void WriteRawSimpleTestType(this VoxWriter writer, SimpleTestType value) { var copy = value; SimpleTestTypeSerializer.Instance.WriteRaw(writer, ref value); }
                                                                                                                              public static SimpleTestType ReadFullSimpleTestType(this VoxReader reader) => SimpleTestTypeSerializer.Instance.ReadFull(reader);
                                                                                                                              public static SimpleTestType ReadRawSimpleTestType(this VoxReader reader) => SimpleTestTypeSerializer.Instance.ReadRaw(reader);
                                                                                                                           }
                                                                                                                        }

                                                                                                                        namespace Dargon.Vox2 {
               

                                                                                                                        }

                                                                                                                        namespace System {
                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public static class Int32VoxConstants {
                                                                                                                              public const int TypeId = -21;
                                                                                                                              public static Int32Serializer Serializer => Int32Serializer.Instance;
                                                                                                                              public static readonly byte[] TypeIdBytes = TypeId.ToVariableIntBytes();
                                                                                                                           }

                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public sealed partial class Int32Serializer : IVoxSerializer<Int32> {
                                                                                                                              public static readonly Int32Serializer Instance = new();
                                                                                                                              public bool IsUpdatable => false;

                                                                                                                              public void WriteTypeIdBytes(VoxWriter writer) => writer.WriteTypeIdBytes(Int32VoxConstants.TypeIdBytes);
                                                                                                                              public void AssertReadTypeId(VoxReader reader) => reader.ReadTypeId().AssertEquals(Int32VoxConstants.TypeId);
                                                                                                                              public void WriteFull(VoxWriter writer, ref Int32 self) { Int32Serializer.Instance.WriteTypeIdBytes(writer); WriteRaw(writer, ref self);
 }
                                                                                                                              public void WriteRaw(VoxWriter writer, ref Int32 self) { global::Dargon.Vox2.VoxGeneration_Int32.Stub_WriteRaw_Int32(writer, self);
 }
               

                                                                                                                              public Int32 ReadFull(VoxReader reader) { Int32Serializer.Instance.AssertReadTypeId(reader); return ReadRaw(reader);
 }
                                                                                                                              public Int32 ReadRaw(VoxReader reader) { return global::Dargon.Vox2.VoxGeneration_Int32.Stub_ReadRaw_Int32(reader);
 }
                                                                                                                              public void ReadFullIntoRef(VoxReader reader, ref Int32 self) => throw new InvalidOperationException("Reading into Int32 ref is not supported.");
                                                                                                                              public void ReadRawIntoRef(VoxReader reader, ref Int32 self) => throw new InvalidOperationException("Reading into Int32 ref is not supported.");
                  

                                                                                                                           }
               


                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public static class VoxGenerated_Int32Statics {
                                                                                                                              public static void WriteFullInt32(this VoxWriter writer, Int32 value) { var copy = value; Int32Serializer.Instance.WriteFull(writer, ref value); }
                                                                                                                              public static void WriteRawInt32(this VoxWriter writer, Int32 value) { var copy = value; Int32Serializer.Instance.WriteRaw(writer, ref value); }
                                                                                                                              public static Int32 ReadFullInt32(this VoxReader reader) => Int32Serializer.Instance.ReadFull(reader);
                                                                                                                              public static Int32 ReadRawInt32(this VoxReader reader) => Int32Serializer.Instance.ReadRaw(reader);
                                                                                                                           }
                                                                                                                        }

                                                                                                                        namespace Dargon.Vox2 {
               

                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public static partial class VoxGeneration_Int32 {
                                                                                                                              public static partial void Stub_WriteRaw_Int32(VoxWriter writer, Int32 self);
public static partial Int32 Stub_ReadRaw_Int32(VoxReader reader);
                                                               
                                                                                                                           }

                                                                                                                        }

                                                                                                                        namespace System {
                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public static class StringVoxConstants {
                                                                                                                              public const int TypeId = -32;
                                                                                                                              public static StringSerializer Serializer => StringSerializer.Instance;
                                                                                                                              public static readonly byte[] TypeIdBytes = TypeId.ToVariableIntBytes();
                                                                                                                           }

                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public sealed partial class StringSerializer : IVoxSerializer<String> {
                                                                                                                              public static readonly StringSerializer Instance = new();
                                                                                                                              public bool IsUpdatable => false;

                                                                                                                              public void WriteTypeIdBytes(VoxWriter writer) => writer.WriteTypeIdBytes(StringVoxConstants.TypeIdBytes);
                                                                                                                              public void AssertReadTypeId(VoxReader reader) => reader.ReadTypeId().AssertEquals(StringVoxConstants.TypeId);
                                                                                                                              public void WriteFull(VoxWriter writer, ref String self) { StringSerializer.Instance.WriteTypeIdBytes(writer); WriteRaw(writer, ref self);
 }
                                                                                                                              public void WriteRaw(VoxWriter writer, ref String self) { global::Dargon.Vox2.VoxGeneration_String.Stub_WriteRaw_String(writer, self);
 }
               

                                                                                                                              public String ReadFull(VoxReader reader) { StringSerializer.Instance.AssertReadTypeId(reader); return ReadRaw(reader);
 }
                                                                                                                              public String ReadRaw(VoxReader reader) { return global::Dargon.Vox2.VoxGeneration_String.Stub_ReadRaw_String(reader);
 }
                                                                                                                              public void ReadFullIntoRef(VoxReader reader, ref String self) => throw new InvalidOperationException("Reading into String ref is not supported.");
                                                                                                                              public void ReadRawIntoRef(VoxReader reader, ref String self) => throw new InvalidOperationException("Reading into String ref is not supported.");
                  

                                                                                                                           }
               


                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public static class VoxGenerated_StringStatics {
                                                                                                                              public static void WriteFullString(this VoxWriter writer, String value) { var copy = value; StringSerializer.Instance.WriteFull(writer, ref value); }
                                                                                                                              public static void WriteRawString(this VoxWriter writer, String value) { var copy = value; StringSerializer.Instance.WriteRaw(writer, ref value); }
                                                                                                                              public static String ReadFullString(this VoxReader reader) => StringSerializer.Instance.ReadFull(reader);
                                                                                                                              public static String ReadRawString(this VoxReader reader) => StringSerializer.Instance.ReadRaw(reader);
                                                                                                                           }
                                                                                                                        }

                                                                                                                        namespace Dargon.Vox2 {
               

                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public static partial class VoxGeneration_String {
                                                                                                                              public static partial void Stub_WriteRaw_String(VoxWriter writer, String self);
public static partial String Stub_ReadRaw_String(VoxReader reader);
                                                               
                                                                                                                           }

                                                                                                                        }
