
                                                                                                                        // <auto-generated/>

                                                                                                                        using Dargon.Commons;

                                                                                                                        using Dargon.Vox2;

                                                                                                                        using System;

                                                                                                                        using System.Numerics;

                                                                                                                        namespace Dargon.Courier.ManagementTier.Vox {
                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           [VoxType(kTypeId, VanityRedirectFromType = typeof(DataPoint<>))]
                                                                                                                           public sealed partial class DataPointSerializer<T> : IVoxSerializer<DataPoint<T>> {
                                                                                                                              public const int kTypeId = 47;

                                                                                                                              private static DataPointSerializer<T> s_instance;
                                                                                                                              public static DataPointSerializer<T> GetInstance(VoxSerializerContainer vsc) => s_instance ??= new(vsc);
                                                                                                                              public static DataPointSerializer<T> GetInstance(VoxContext vox) => GetInstance(vox.SerializerContainer);

                                                                                                                              private IVoxSerializer<T> _dep_T;


                                                                                                                              public DataPointSerializer(VoxSerializerContainer vsc) {
                                                                                                                                 _dep_T = vsc.GetSerializerForType<T>();


                                                                                                                                 SimpleTypeId = kTypeId;
                                                                                                                                 FullTypeId = Arrays.Concat(new[] { kTypeId }, _dep_T.FullTypeId);
                                                                                                                                 FullTypeIdBytes = FullTypeId.ToVariableIntBytes();
                                                                                                                              }

                                                                                                                              public int SimpleTypeId { get; }
                                                                                                                              public int[] FullTypeId { get; }
                                                                                                                              public byte[] FullTypeIdBytes { get; }

                                                                                                                              public bool IsUpdatable => true;

                                                                                                                              public void WriteTypeIdBytes(VoxWriter writer) => writer.WriteTypeIdBytes(FullTypeIdBytes);
                                                                                                                              public void AssertReadTypeId(VoxReader reader) => reader.AssertReadTypeIdBytes(FullTypeIdBytes);
                                                                                                                              public void WriteFull(VoxWriter writer, ref DataPoint<T> self) { DataPointSerializer<T>.GetInstance(writer.Context).WriteTypeIdBytes(writer); WriteRaw(writer, ref self);
 }
                                                                                                                              public void WriteRaw(VoxWriter writer, ref DataPoint<T> self) { 
                                                                                                                                  {
writer.WriteRawDateTime(self.Time);

                                                                                                                                  }

                                                                                                                                  {
var _voxvarname_copy = self.Value;
_dep_T.WriteRaw(writer, ref _voxvarname_copy);

                                                                                                                                  }
 }
               

                                                                                                                              public DataPoint<T> ReadFull(VoxReader reader) { DataPoint<T> res = new(); ReadFullIntoRef(reader, ref res); return res; }
                                                                                                                              public DataPoint<T> ReadRaw(VoxReader reader) { DataPoint<T> res = new(); ReadRawIntoRef(reader, ref res); return res; }
                                                                                                                              public void ReadFullIntoRef(VoxReader reader, ref DataPoint<T> self) { DataPointSerializer<T>.GetInstance(reader.Context).AssertReadTypeId(reader); ReadRawIntoRef(reader, ref self);
 }
                                                                                                                              public void ReadRawIntoRef(VoxReader reader, ref DataPoint<T> self) { if (self == null) throw new ArgumentNullException(nameof(DataPoint<T>));

                                                                                                                                  {

                                                                                                                                     self.Time = reader.ReadRawDateTime();
                                                                                                                                  }

                                                                                                                                  {

                                                                                                                                     self.Value = _dep_T.ReadRaw(reader);;
                                                                                                                                  }
 }
                  

                                                                                                                              void IVoxSerializer.WriteRawObject(VoxWriter writer, object val) { DataPoint<T> v = (DataPoint<T>)val; WriteRaw(writer, ref v); }
                                                                                                                              object IVoxSerializer.ReadRawObject(VoxReader reader) => ReadRaw(reader);
                                                                                                                           }
               

                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           [VoxInternalsAutoSerializedTypeInfoAttribute(GenericSerializerTypeDefinition = typeof(DataPointSerializer<>))]
                                                                                                                           public partial class DataPoint<T> /* : IVoxCustomType<Dargon.Courier.ManagementTier.Vox.DataPoint<T>> */ {
                                                                                                                              /* can't put more here because of enums */
                                                                                                                           }

                                                                                                                        }

                                                                                                                        namespace Dargon.Courier.ManagementTier.Vox {

                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public static class VoxGenerated_DataPointStatics {
                                                                                                                              internal static DataPointSerializer<T> GetSerializerInstance<T>(VoxContext vox) => DataPointSerializer<T>.GetInstance(vox.SerializerContainer);

                                                                                                                              public static void WriteFullDataPoint<T>(this VoxWriter writer, Dargon.Courier.ManagementTier.Vox.DataPoint<T> value) { var copy = value; GetSerializerInstance<T>(writer.Context).WriteFull(writer, ref value); }
                                                                                                                              public static void WriteRawDataPoint<T>(this VoxWriter writer, Dargon.Courier.ManagementTier.Vox.DataPoint<T> value) { var copy = value; GetSerializerInstance<T>(writer.Context).WriteRaw(writer, ref value); }
                                                                                                                              public static DataPoint<T> ReadFullDataPoint<T>(this VoxReader reader) => GetSerializerInstance<T>(reader.Context).ReadFull(reader);
                                                                                                                              public static DataPoint<T> ReadRawDataPoint<T>(this VoxReader reader) => GetSerializerInstance<T>(reader.Context).ReadRaw(reader);
            

                                                                                                                              public static void WriteFullInto<T>(this DataPoint<T> self, VoxWriter writer) { var copy = self; GetSerializerInstance<T>(writer.Context).WriteFull(writer, ref copy); }
                                                                                                                              public static void WriteRawInto<T>(this DataPoint<T> self, VoxWriter writer) { var copy = self; GetSerializerInstance<T>(writer.Context).WriteRaw(writer, ref copy); }
            

                                                                                                                              public static void ReadFullFrom<T>( this DataPoint<T> self, VoxReader reader) { var copy = self; GetSerializerInstance<T>(reader.Context).ReadFullIntoRef(reader, ref copy); }
                                                                                                                              public static void ReadRawFrom<T>( this DataPoint<T> self, VoxReader reader) { var copy = self; GetSerializerInstance<T>(reader.Context).ReadRawIntoRef(reader, ref copy); }
               


                                                                                                                           }
                                                                                                                        }

                                                                                                                        // Stubs
                                                                                                                        namespace Dargon.Courier.ManagementTier.Vox {
               

                                                                                                                        }
