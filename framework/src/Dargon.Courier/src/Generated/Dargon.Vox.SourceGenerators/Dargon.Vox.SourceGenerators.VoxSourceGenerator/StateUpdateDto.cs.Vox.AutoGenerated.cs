
                                                                                                                        // <auto-generated/>

                                                                                                                        using Dargon.Commons;

                                                                                                                        using Dargon.Vox2;

                                                                                                                        using System;

                                                                                                                        using System.Numerics;

                                                                                                                        namespace Dargon.Courier.StateReplicationTier.Vox {
                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           [VoxType(kTypeId, VanityRedirectFromType = typeof(StateUpdateDto))]
                                                                                                                           public sealed partial class StateUpdateDtoSerializer : IVoxSerializer<StateUpdateDto> {
                                                                                                                              public const int kTypeId = 60;

                                                                                                                              private static StateUpdateDtoSerializer s_instance;
                                                                                                                              public static StateUpdateDtoSerializer GetInstance(VoxSerializerContainer vsc) => s_instance ??= new(vsc);
                                                                                                                              public static StateUpdateDtoSerializer GetInstance(VoxContext vox) => GetInstance(vox.SerializerContainer);

                                                                                                                              

                                                                                                                              public StateUpdateDtoSerializer(VoxSerializerContainer vsc) {
                                                                                                                                 

                                                                                                                                 SimpleTypeId = kTypeId;
                                                                                                                                 FullTypeId = new[] { kTypeId };
                                                                                                                                 FullTypeIdBytes = FullTypeId.ToVariableIntBytes();
                                                                                                                              }

                                                                                                                              public int SimpleTypeId { get; }
                                                                                                                              public int[] FullTypeId { get; }
                                                                                                                              public byte[] FullTypeIdBytes { get; }

                                                                                                                              public bool IsUpdatable => true;

                                                                                                                              public void WriteTypeIdBytes(VoxWriter writer) => writer.WriteTypeIdBytes(FullTypeIdBytes);
                                                                                                                              public void AssertReadTypeId(VoxReader reader) => reader.AssertReadTypeIdBytes(FullTypeIdBytes);
                                                                                                                              public void WriteFull(VoxWriter writer, ref StateUpdateDto self) { StateUpdateDtoSerializer.GetInstance(writer.Context).WriteTypeIdBytes(writer); WriteRaw(writer, ref self);
 }
                                                                                                                              public void WriteRaw(VoxWriter writer, ref StateUpdateDto self) { 
                                                                                                                                  {
writer.WriteRawBoolean(self.IsSnapshot);

                                                                                                                                  }

                                                                                                                                  {
writer.WriteRawBoolean(self.IsOutOfBand);

                                                                                                                                  }

                                                                                                                                  {
writer.WriteRawInt32(self.SnapshotEpoch);

                                                                                                                                  }

                                                                                                                                  {
writer.WriteRawInt32(self.DeltaSeq);

                                                                                                                                  }

                                                                                                                                  {
writer.WritePolymorphic<object>(self.Payload);

                                                                                                                                  }

                                                                                                                                  {
writer.WriteRawInt32(self.VanityTotalSeq);

                                                                                                                                  }
 }
               

                                                                                                                              public StateUpdateDto ReadFull(VoxReader reader) { StateUpdateDto res = new(); ReadFullIntoRef(reader, ref res); return res; }
                                                                                                                              public StateUpdateDto ReadRaw(VoxReader reader) { StateUpdateDto res = new(); ReadRawIntoRef(reader, ref res); return res; }
                                                                                                                              public void ReadFullIntoRef(VoxReader reader, ref StateUpdateDto self) { StateUpdateDtoSerializer.GetInstance(reader.Context).AssertReadTypeId(reader); ReadRawIntoRef(reader, ref self);
 }
                                                                                                                              public void ReadRawIntoRef(VoxReader reader, ref StateUpdateDto self) { if (self == null) throw new ArgumentNullException(nameof(StateUpdateDto));

                                                                                                                                  {

                                                                                                                                     self.IsSnapshot = reader.ReadRawBoolean();
                                                                                                                                  }

                                                                                                                                  {

                                                                                                                                     self.IsOutOfBand = reader.ReadRawBoolean();
                                                                                                                                  }

                                                                                                                                  {

                                                                                                                                     self.SnapshotEpoch = reader.ReadRawInt32();
                                                                                                                                  }

                                                                                                                                  {

                                                                                                                                     self.DeltaSeq = reader.ReadRawInt32();
                                                                                                                                  }

                                                                                                                                  {

                                                                                                                                     self.Payload = reader.ReadPolymorphic<object>();
                                                                                                                                  }

                                                                                                                                  {

                                                                                                                                     self.VanityTotalSeq = reader.ReadRawInt32();
                                                                                                                                  }
 }
                  

                                                                                                                              void IVoxSerializer.WriteRawObject(VoxWriter writer, object val) { StateUpdateDto v = (StateUpdateDto)val; WriteRaw(writer, ref v); }
                                                                                                                              object IVoxSerializer.ReadRawObject(VoxReader reader) => ReadRaw(reader);
                                                                                                                           }
               

                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           [VoxInternalsAutoSerializedTypeInfoAttribute(GenericSerializerTypeDefinition = typeof(StateUpdateDtoSerializer))]
                                                                                                                           public partial class StateUpdateDto /* : IVoxCustomType<Dargon.Courier.StateReplicationTier.Vox.StateUpdateDto> */ {
                                                                                                                              private static StateUpdateDtoSerializer GetSerializerInstance(VoxContext vox) => StateUpdateDtoSerializer.GetInstance(vox.SerializerContainer);
                                                                                                                              // public StateUpdateDtoSerializer Serializer => StateUpdateDtoSerializer.Instance;
                                                                                                                              // IVoxSerializer IVoxCustomType.Serializer => Serializer;
                                                                                                                              // IVoxSerializer<Dargon.Courier.StateReplicationTier.Vox.StateUpdateDto> IVoxCustomType<Dargon.Courier.StateReplicationTier.Vox.StateUpdateDto>.Serializer => Serializer;

                                                                                                                              public void WriteFullInto(VoxWriter writer) { var copy = this; GetSerializerInstance(writer.Context).WriteFull(writer, ref copy); }
                                                                                                                              public void WriteRawInto(VoxWriter writer) { var copy = this; GetSerializerInstance(writer.Context).WriteRaw(writer, ref copy); }
                  

                                                                                                                              public void ReadFullFrom(VoxReader reader) { var copy = this; GetSerializerInstance(reader.Context).ReadFullIntoRef(reader, ref copy); }
                                                                                                                              public void ReadRawFrom(VoxReader reader) { var copy = this; GetSerializerInstance(reader.Context).ReadRawIntoRef(reader, ref copy); }
                     

                                                                                                                           }


                                                                                                                           /// <summary>Autogenerated</summary>
                                                                                                                           public static class VoxGenerated_StateUpdateDtoStatics {
                                                                                                                              public static void WriteFullStateUpdateDto(this VoxWriter writer, Dargon.Courier.StateReplicationTier.Vox.StateUpdateDto value) { var copy = value; StateUpdateDtoSerializer.GetInstance(writer.Context).WriteFull(writer, ref value); }
                                                                                                                              public static void WriteRawStateUpdateDto(this VoxWriter writer, Dargon.Courier.StateReplicationTier.Vox.StateUpdateDto value) { var copy = value; StateUpdateDtoSerializer.GetInstance(writer.Context).WriteRaw(writer, ref value); }
                                                                                                                              public static StateUpdateDto ReadFullStateUpdateDto(this VoxReader reader) => StateUpdateDtoSerializer.GetInstance(reader.Context).ReadFull(reader);
                                                                                                                              public static StateUpdateDto ReadRawStateUpdateDto(this VoxReader reader) => StateUpdateDtoSerializer.GetInstance(reader.Context).ReadRaw(reader);
                                                                                                                           }
                                                                                                                        }

                                                                                                                        namespace Dargon.Courier.StateReplicationTier.Vox {
               

                                                                                                                        }
